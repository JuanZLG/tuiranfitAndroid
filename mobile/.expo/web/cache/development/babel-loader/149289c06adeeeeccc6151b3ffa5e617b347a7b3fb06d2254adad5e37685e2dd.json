{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, Button, MD2DarkTheme, Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: 'red',\n      background: 'transparent'\n    })\n  });\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.allContainer,\n      children: [_jsx(Image, {\n        source: require(\"../assets/img/bwh.webp\"),\n        style: styles.backgroundImage\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Image, {\n          source: require(\"../assets/img/GIcon.png\"),\n          style: styles.image,\n          resizeMode: \"contain\"\n        }), _jsx(Formik, {\n          initialValues: {\n            nombre: '',\n            correo: ''\n          },\n          onSubmit: function onSubmit(values) {\n            console.log(values);\n          },\n          children: function children(_ref) {\n            var handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur,\n              handleSubmit = _ref.handleSubmit,\n              values = _ref.values;\n            return _jsxs(View, {\n              style: {\n                width: '100%'\n              },\n              children: [_jsx(TextInput, {\n                label: \"Correo Electr\\xF3nico\",\n                mode: \"outlined\",\n                onChangeText: handleChange('nombre'),\n                theme: {\n                  colors: {\n                    text: 'black',\n                    primary: 'red'\n                  }\n                },\n                onBlur: handleBlur('nombre'),\n                value: values.nombre,\n                style: styles.input,\n                underlineColor: \"black\"\n              }), _jsx(TextInput, {\n                label: \"Contrase\\xF1a\",\n                mode: \"outlined\",\n                onChangeText: handleChange('correo'),\n                onBlur: handleBlur('correo'),\n                theme: {\n                  colors: {\n                    text: 'white',\n                    primary: 'red'\n                  }\n                },\n                value: values.correo,\n                style: styles.input,\n                secureTextEntry: true\n              }), _jsx(Button, {\n                mode: \"contained\",\n                onPress: handleSubmit,\n                style: {\n                  backgroundColor: 'red',\n                  width: '50%',\n                  alignSelf: 'center',\n                  marginTop: 8\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Entrar\"\n                })\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  allContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  formContainer: {\n    alignItems: 'center',\n    width: '80%',\n    padding: 30,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 35,\n    borderWidth: 3\n  },\n  image: {\n    aspectRatio: 1,\n    height: 100,\n    marginBottom: 20,\n    borderWidth: 6,\n    borderColor: 'red',\n    borderRadius: 70\n  },\n  input: {\n    width: '100%',\n    marginBottom: 15,\n    backgroundColor: 'white'\n  },\n  button: {\n    marginTop: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","View","Text","useNavigation","StyleSheet","Image","Pressable","ScrollView","TextInput","Button","MD2DarkTheme","Provider","PaperProvider","DefaultTheme","Formik","jsx","_jsx","jsxs","_jsxs","LoginScreen","theme","_objectSpread","colors","primary","background","children","contentContainerStyle","styles","allContainer","source","require","style","backgroundImage","formContainer","image","resizeMode","initialValues","nombre","correo","onSubmit","values","console","log","_ref","handleChange","handleBlur","handleSubmit","width","label","mode","onChangeText","text","onBlur","value","input","underlineColor","secureTextEntry","onPress","backgroundColor","alignSelf","marginTop","color","fontWeight","create","flex","alignItems","justifyContent","position","height","padding","borderRadius","paddingVertical","borderWidth","aspectRatio","marginBottom","borderColor","button"],"sources":["C:/Users/Juan Camilo}/Desktop/mobileProject/tuiranfitmobile/views/logIn.js"],"sourcesContent":["// LoginScreen.js\r\nimport React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StyleSheet, Image, Pressable, ScrollView } from 'react-native';\r\nimport { TextInput, Button, MD2DarkTheme, Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\r\nimport { Formik } from 'formik';\r\n\r\nconst LoginScreen = () => {\r\n//   const navigation = useNavigation();\r\n\r\n//   const handleLogin = () => {\r\n//     // Lógica de inicio de sesión aquí\r\n//     // Después de iniciar sesión, navegar a la vista de inicio\r\n//     navigation.navigate('Home');\r\n//   };\r\n\r\n  const theme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      primary: 'red',\r\n      background: 'transparent', \r\n      // Puedes agregar más propiedades según tus necesidades\r\n    },\r\n  };\r\n\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n    <ScrollView contentContainerStyle={styles.allContainer}>\r\n      <Image\r\n        source={require('../assets/img/bwh.webp')}\r\n        style={styles.backgroundImage}\r\n      />\r\n      {/* <Text style={{color:'black', fontWeight:'bold', fontSize:45, fontFamily:''}}>Iniciar Sesión</Text> */}\r\n      <View style={styles.formContainer}>\r\n        <Image\r\n          source={require('../assets/img/GIcon.png')}\r\n          style={styles.image}\r\n          resizeMode=\"contain\"\r\n        />\r\n\r\n        <Formik\r\n          initialValues={{ nombre: '', correo: '' }}\r\n          onSubmit={(values) => {\r\n            console.log(values);\r\n          }}\r\n        >\r\n          {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n            <View style={{ width: '100%' }}>\r\n              <TextInput\r\n                label=\"Correo Electrónico\"\r\n                mode=\"outlined\"\r\n                onChangeText={handleChange('nombre')}\r\n                theme={{ colors: { text: 'black', primary: 'red' } }}\r\n                onBlur={handleBlur('nombre')}\r\n                value={values.nombre}\r\n                style={styles.input}\r\n                underlineColor=\"black\"\r\n              />\r\n              <TextInput\r\n                label=\"Contraseña\"\r\n                mode=\"outlined\"\r\n                onChangeText={handleChange('correo')}\r\n                onBlur={handleBlur('correo')}\r\n                theme={{ colors: { text: 'white', primary: 'red' } }}\r\n                value={values.correo}\r\n                style={styles.input}\r\n                \r\n                secureTextEntry\r\n              />\r\n              \r\n              <Button mode=\"contained\" onPress={handleSubmit} style={{backgroundColor:'red', width:'50%', alignSelf:'center', marginTop:8}}>\r\n                <Text style={{color:'white', fontWeight:'bold'}}>Entrar</Text>\r\n              </Button>\r\n            </View>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n    </ScrollView>\r\n    </PaperProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    allContainer: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    backgroundImage: {\r\n      flex: 1,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      resizeMode: 'cover',\r\n    },\r\n    formContainer: {\r\n      alignItems: 'center',\r\n      width: '80%',\r\n      padding: 30,\r\n      borderRadius: 5,\r\n      backgroundColor: 'white',\r\n      borderRadius:10,\r\n      paddingVertical:35,\r\n      borderWidth:3,\r\n    },\r\n    image: {\r\n      aspectRatio: 1,\r\n      height: 100,\r\n      marginBottom: 20,\r\n      borderWidth:6,\r\n      borderColor:'red',\r\n      borderRadius:70\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      marginBottom: 15,\r\n      backgroundColor:'white',\r\n    },\r\n    button: {\r\n      marginTop: 20,\r\n    },\r\n  });\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}