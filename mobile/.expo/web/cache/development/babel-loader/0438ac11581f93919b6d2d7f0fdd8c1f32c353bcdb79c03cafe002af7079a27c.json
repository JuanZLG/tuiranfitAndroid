{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Button, Provider as PaperProvider, DefaultTheme, TextInput } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: 'red',\n      background: 'transparent'\n    })\n  });\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* (values) {\n      try {\n        var response = yield axios.post('http://localhost:5000/login', values);\n        var token = response.data.token;\n        yield AsyncStorage.setItem('token', token);\n        console.log('Token guardado en AsyncStorage:', token);\n        navigation.navigate('Home');\n        console.log('Inicio de sesión exitoso');\n      } catch (error) {\n        console.error('Error al iniciar sesión:', error.message);\n      }\n    });\n    return function handleLogin(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.allContainer,\n      children: [_jsx(Image, {\n        source: require(\"../assets/img/bwh.webp\"),\n        style: styles.backgroundImage\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Image, {\n          source: require(\"../assets/img/GIcon.png\"),\n          style: styles.image,\n          resizeMode: \"contain\"\n        }), _jsx(Formik, {\n          initialValues: {\n            correo: '',\n            contra: ''\n          },\n          onSubmit: handleLogin,\n          children: function children(_ref2) {\n            var handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              values = _ref2.values;\n            return _jsxs(View, {\n              style: {\n                width: '100%'\n              },\n              children: [_jsx(TextInput, {\n                label: \"Correo Electr\\xF3nico\",\n                mode: \"outlined\",\n                theme: {\n                  colors: {\n                    text: 'black',\n                    primary: 'red'\n                  }\n                },\n                onChangeText: handleChange('correo'),\n                onBlur: handleBlur('correo'),\n                value: values.correo,\n                style: styles.input,\n                underlineColor: \"black\"\n              }), _jsx(TextInput, {\n                label: \"Contrase\\xF1a\",\n                mode: \"outlined\",\n                onChangeText: handleChange('contra'),\n                onBlur: handleBlur('contra'),\n                theme: {\n                  colors: {\n                    text: 'white',\n                    primary: 'red'\n                  }\n                },\n                value: values.contra,\n                style: styles.input,\n                secureTextEntry: true\n              }), _jsx(Button, {\n                mode: \"contained\",\n                onPress: handleSubmit,\n                style: {\n                  backgroundColor: 'red',\n                  width: '50%',\n                  alignSelf: 'center',\n                  marginTop: 8\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Entrar\"\n                })\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  allContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  formContainer: {\n    alignItems: 'center',\n    width: '80%',\n    padding: 30,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 35,\n    borderWidth: 3\n  },\n  image: {\n    aspectRatio: 1,\n    height: 100,\n    marginBottom: 20,\n    borderWidth: 6,\n    borderColor: 'red',\n    borderRadius: 70\n  },\n  input: {\n    width: '100%',\n    marginBottom: 15,\n    backgroundColor: 'white'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","useNavigation","Button","Provider","PaperProvider","DefaultTheme","TextInput","Formik","axios","AsyncStorage","KeyboardAvoidingView","jsx","_jsx","jsxs","_jsxs","LoginScreen","navigation","theme","_objectSpread","colors","primary","background","handleLogin","_ref","_asyncToGenerator","values","response","post","token","data","setItem","console","log","navigate","error","message","_x","apply","arguments","children","behavior","Platform","OS","style","styles","allContainer","source","require","backgroundImage","formContainer","image","resizeMode","initialValues","correo","contra","onSubmit","_ref2","handleChange","handleBlur","handleSubmit","width","label","mode","text","onChangeText","onBlur","value","input","underlineColor","secureTextEntry","onPress","backgroundColor","alignSelf","marginTop","color","fontWeight","create","flex","alignItems","justifyContent","position","height","padding","borderRadius","paddingVertical","borderWidth","aspectRatio","marginBottom","borderColor"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/logIn.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Button, Provider as PaperProvider, DefaultTheme, TextInput } from 'react-native-paper';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { KeyboardAvoidingView } from 'react-native';\r\n\r\n\r\nconst LoginScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const theme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      primary: 'red',\r\n      background: 'transparent',\r\n    },\r\n  };\r\n\r\n  const handleLogin = async (values) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', values);\r\n\r\n      const token = response.data.token;\r\n\r\n      // Guardar el token en AsyncStorage para su uso posterior\r\n      await AsyncStorage.setItem('token', token);\r\n\r\n      // Imprimir el token en la consola para verificar\r\n      console.log('Token guardado en AsyncStorage:', token);\r\n\r\n      // Navegar a la pantalla de inicio\r\n      navigation.navigate('Home');\r\n\r\n      // Mensaje por consola en caso de inicio de sesión exitoso\r\n      console.log('Inicio de sesión exitoso');\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.allContainer}\r\n      >\r\n        <Image\r\n          source={require('../assets/img/bwh.webp')}\r\n          style={styles.backgroundImage}\r\n        />\r\n        <View style={styles.formContainer}>\r\n          <Image\r\n            source={require('../assets/img/GIcon.png')}\r\n            style={styles.image}\r\n            resizeMode=\"contain\"\r\n          />\r\n\r\n          <Formik\r\n            initialValues={{ correo: '', contra: '' }}\r\n            onSubmit={handleLogin}\r\n          >\r\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n              <View style={{ width: '100%' }}>\r\n                <TextInput\r\n                  label=\"Correo Electrónico\"\r\n                  mode=\"outlined\"\r\n                  theme={{ colors: { text: 'black', primary: 'red' } }}\r\n                  onChangeText={handleChange('correo')}\r\n                  onBlur={handleBlur('correo')}\r\n                  value={values.correo}\r\n                  style={styles.input}\r\n                  underlineColor=\"black\"\r\n                />\r\n                <TextInput\r\n                  label=\"Contraseña\"\r\n                  mode=\"outlined\"\r\n                  onChangeText={handleChange('contra')}\r\n                  onBlur={handleBlur('contra')}\r\n                  theme={{ colors: { text: 'white', primary: 'red' } }}\r\n                  value={values.contra}\r\n                  style={styles.input}\r\n                  secureTextEntry\r\n                />\r\n\r\n                <Button mode=\"contained\" onPress={handleSubmit} style={{ backgroundColor: 'red', width: '50%', alignSelf: 'center', marginTop: 8 }}>\r\n                  <Text style={{ color: 'white', fontWeight: 'bold' }}>Entrar</Text>\r\n                </Button>\r\n              </View>\r\n            )}\r\n          </Formik>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </PaperProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  allContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'cover',\r\n  },\r\n  formContainer: {\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    padding: 30,\r\n    borderRadius: 5,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    paddingVertical: 35,\r\n    borderWidth: 3,\r\n  },\r\n  image: {\r\n    aspectRatio: 1,\r\n    height: 100,\r\n    marginBottom: 20,\r\n    borderWidth: 6,\r\n    borderColor: 'red',\r\n    borderRadius: 70\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginBottom: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}