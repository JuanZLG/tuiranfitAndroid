{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var windowWidth = Dimensions.get('window').width;\n  var menuTranslateX = useRef(new Animated.Value(-windowWidth)).current;\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(function (prev) {\n      return !prev;\n    });\n  };\n  useEffect(function () {\n    Animated.timing(menuTranslateX, {\n      toValue: isMenuOpen ? 0 : -windowWidth,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  }, [isMenuOpen]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Animated.View, {\n      style: [styles.sideMenu, {\n        transform: [{\n          translateX: menuTranslateX\n        }]\n      }],\n      children: [_jsx(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: toggleMenu,\n        children: _jsx(Text, {\n          style: styles.closeButtonText,\n          children: \"Cerrar\"\n        })\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 1\"\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 2\"\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 3\"\n      })]\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.menuIcon,\n        onPress: toggleMenu,\n        children: _jsx(Icon, {\n          name: \"bars\",\n          size: 30,\n          color: \"white\"\n        })\n      }), _jsxs(View, {\n        style: styles.titleContainer,\n        children: [_jsx(Image, {\n          source: require(\"../assets/img/GIcon.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: styles.navbarText,\n          children: \"Tuiranfit\"\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  menuIcon: {\n    marginLeft: 10,\n    zIndex: 2\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 30,\n    height: 30,\n    marginRight: 10\n  },\n  navbarText: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  sideMenu: {\n    backgroundColor: 'black',\n    padding: 16,\n    width: Dimensions.get('window').width * 0.75,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%'\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 20\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16\n  },\n  menuItem: {\n    color: 'white',\n    fontSize: 18,\n    marginBottom: 10\n  },\n  content: {\n    flex: 1,\n    backgroundColor: 'black',\n    padding: 20\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","Image","TouchableOpacity","Animated","Dimensions","Icon","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","windowWidth","get","width","menuTranslateX","Value","current","toggleMenu","prev","timing","toValue","duration","useNativeDriver","start","style","styles","container","children","sideMenu","transform","translateX","closeButton","onPress","closeButtonText","menuItem","content","menuIcon","name","size","color","titleContainer","source","require","logo","resizeMode","navbarText","create","flexDirection","marginLeft","zIndex","alignItems","height","marginRight","fontSize","fontWeight","backgroundColor","padding","position","top","left","alignSelf","marginBottom","flex"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/navbarrr.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, Animated, Dimensions } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const windowWidth = Dimensions.get('window').width;\r\n\r\n  const menuTranslateX = useRef(new Animated.Value(-windowWidth)).current;\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Animated.timing(menuTranslateX, {\r\n      toValue: isMenuOpen ? 0 : -windowWidth,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [isMenuOpen]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Animated.View style={[styles.sideMenu, { transform: [{ translateX: menuTranslateX }] }]}>\r\n        <TouchableOpacity style={styles.closeButton} onPress={toggleMenu}>\r\n          <Text style={styles.closeButtonText}>Cerrar</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.menuItem}>Opción 1</Text>\r\n        <Text style={styles.menuItem}>Opción 2</Text>\r\n        <Text style={styles.menuItem}>Opción 3</Text>\r\n      </Animated.View>\r\n      <View style={styles.content}>\r\n        <TouchableOpacity style={styles.menuIcon} onPress={toggleMenu}>\r\n          <Icon name=\"bars\" size={30} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.titleContainer}>\r\n          <Image\r\n            source={require('../assets/img/GIcon.png')}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          <Text style={styles.navbarText}>Tuiranfit</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n  },\r\n  menuIcon: {\r\n    marginLeft: 10,\r\n    zIndex: 2,\r\n  },\r\n  titleContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  logo: {\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n  },\r\n  navbarText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  sideMenu: {\r\n    backgroundColor: 'black',\r\n    padding: 16,\r\n    width: Dimensions.get('window').width * 0.75,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n  },\r\n  closeButton: {\r\n    alignSelf: 'flex-end',\r\n    marginBottom: 20,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  menuItem: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    backgroundColor: 'black', // Color de fondo del contenido principal\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}