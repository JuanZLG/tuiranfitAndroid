{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Sidebar = function Sidebar(_ref) {\n  var isOpen = _ref.isOpen,\n    onClose = _ref.onClose;\n  var windowWidth = Dimensions.get('window').width;\n  var sidebarTranslateX = useRef(new Animated.Value(-windowWidth)).current;\n  useEffect(function () {\n    Animated.timing(sidebarTranslateX, {\n      toValue: isOpen ? 0 : -windowWidth,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  }, [isOpen]);\n  return _jsxs(Animated.View, {\n    style: [styles.sidebar, {\n      transform: [{\n        translateX: sidebarTranslateX\n      }]\n    }],\n    children: [_jsx(TouchableOpacity, {\n      style: styles.closeButton,\n      onPress: onClose,\n      children: _jsx(Icon, {\n        name: \"times\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsx(Text, {\n      style: styles.menuItem,\n      children: \"Opci\\xF3n 1\"\n    }), _jsx(Text, {\n      style: styles.menuItem,\n      children: \"Opci\\xF3n 2\"\n    }), _jsx(Text, {\n      style: styles.menuItem,\n      children: \"Opci\\xF3n 3\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  sidebar: {\n    backgroundColor: 'black',\n    padding: 16,\n    width: Dimensions.get('window').width * 0.75,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    zIndex: 2\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 20\n  },\n  menuItem: {\n    color: 'white',\n    fontSize: 18,\n    marginBottom: 10\n  }\n});\nexport default Sidebar;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","TouchableOpacity","Animated","Dimensions","Icon","jsx","_jsx","jsxs","_jsxs","Sidebar","_ref","isOpen","onClose","windowWidth","get","width","sidebarTranslateX","Value","current","timing","toValue","duration","useNativeDriver","start","style","styles","sidebar","transform","translateX","children","closeButton","onPress","name","size","color","menuItem","create","backgroundColor","padding","position","top","left","height","zIndex","alignSelf","marginBottom","fontSize"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/sidebarrr.js"],"sourcesContent":["// Sidebar.js\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Animated, Dimensions } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Sidebar = ({ isOpen, onClose }) => {\r\n  const windowWidth = Dimensions.get('window').width;\r\n  const sidebarTranslateX = useRef(new Animated.Value(-windowWidth)).current;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(sidebarTranslateX, {\r\n      toValue: isOpen ? 0 : -windowWidth,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Animated.View style={[styles.sidebar, { transform: [{ translateX: sidebarTranslateX }] }]}>\r\n      <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n        <Icon name=\"times\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <Text style={styles.menuItem}>Opción 1</Text>\r\n      <Text style={styles.menuItem}>Opción 2</Text>\r\n      <Text style={styles.menuItem}>Opción 3</Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  sidebar: {\r\n    backgroundColor: 'black',\r\n    padding: 16,\r\n    width: Dimensions.get('window').width * 0.75,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    zIndex: 2,\r\n  },\r\n  closeButton: {\r\n    alignSelf: 'flex-end',\r\n    marginBottom: 20,\r\n  },\r\n  menuItem: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default Sidebar;\r\n"],"mappings":"AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE3D,OAAOC,IAAI;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAChC,IAAMC,WAAW,GAAGV,UAAU,CAACW,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;EAClD,IAAMC,iBAAiB,GAAGpB,MAAM,CAAC,IAAIM,QAAQ,CAACe,KAAK,CAAC,CAACJ,WAAW,CAAC,CAAC,CAACK,OAAO;EAE1ErB,SAAS,CAAC,YAAM;IACdK,QAAQ,CAACiB,MAAM,CAACH,iBAAiB,EAAE;MACjCI,OAAO,EAAET,MAAM,GAAG,CAAC,GAAG,CAACE,WAAW;MAClCQ,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,OACEH,KAAA,CAACN,QAAQ,CAACJ,IAAI;IAAC0B,KAAK,EAAE,CAACC,MAAM,CAACC,OAAO,EAAE;MAAEC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAEZ;MAAkB,CAAC;IAAE,CAAC,CAAE;IAAAa,QAAA,GACzFvB,IAAA,CAACL,gBAAgB;MAACuB,KAAK,EAAEC,MAAM,CAACK,WAAY;MAACC,OAAO,EAAEnB,OAAQ;MAAAiB,QAAA,EAC5DvB,IAAA,CAACF,IAAI;QAAC4B,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE;IAAC,CAC7B,CAAC,EACnB5B,IAAA,CAACP,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACU,QAAS;MAAAN,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC7CvB,IAAA,CAACP,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACU,QAAS;MAAAN,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC7CvB,IAAA,CAACP,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACU,QAAS;MAAAN,QAAA,EAAC;IAAQ,CAAM,CAAC;EAAA,CAChC,CAAC;AAEpB,CAAC;AAED,IAAMJ,MAAM,GAAGzB,UAAU,CAACoC,MAAM,CAAC;EAC/BV,OAAO,EAAE;IACPW,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXvB,KAAK,EAAEZ,UAAU,CAACW,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,GAAG,IAAI;IAC5CwB,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV,CAAC;EACDb,WAAW,EAAE;IACXc,SAAS,EAAE,UAAU;IACrBC,YAAY,EAAE;EAChB,CAAC;EACDV,QAAQ,EAAE;IACRD,KAAK,EAAE,OAAO;IACdY,QAAQ,EAAE,EAAE;IACZD,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAepC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}