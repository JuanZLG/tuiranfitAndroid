{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(function (prev) {\n      return !prev;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.menuIcon,\n      onPress: toggleMenu,\n      children: _jsx(Icon, {\n        name: isMenuOpen ? 'times' : 'bars',\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"New chat\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.closeIcon,\n      onPress: toggleMenu,\n      children: _jsx(Icon, {\n        name: \"times\",\n        size: 30,\n        color: \"white\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  navbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 40,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    backgroundColor: '#3498db',\n    paddingHorizontal: 10,\n    zIndex: 1\n  },\n  menuIcon: {\n    marginLeft: -0.5,\n    marginTop: -0.5\n  },\n  title: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 16,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  closeIcon: {\n    paddingHorizontal: 15\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Icon","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","toggleMenu","prev","style","styles","navbar","children","menuIcon","onPress","name","size","color","title","closeIcon","create","flexDirection","alignItems","justifyContent","height","borderBottomWidth","borderBottomColor","backgroundColor","paddingHorizontal","zIndex","marginLeft","marginTop","flex","textAlign","fontSize","fontWeight"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/navbarrr.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.navbar}>\r\n      <TouchableOpacity style={styles.menuIcon} onPress={toggleMenu}>\r\n        <Icon name={isMenuOpen ? 'times' : 'bars'} size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <Text style={styles.title}>New chat</Text>\r\n      <TouchableOpacity style={styles.closeIcon} onPress={toggleMenu}>\r\n        <Icon name=\"times\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  navbar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    height: 40,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    backgroundColor: '#3498db',\r\n    paddingHorizontal: 10,\r\n    zIndex: 1,\r\n  },\r\n  menuIcon: {\r\n    marginLeft: -0.5,\r\n    marginTop: -0.5,\r\n  },\r\n  title: {\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  closeIcon: {\r\n    paddingHorizontal: 15,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,IAAI;AAA+C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1D,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,SAAA,GAAkCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,UAAU,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE9B,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,WAAW,CAAC,UAACE,IAAI;MAAA,OAAK,CAACA,IAAI;IAAA,EAAC;EAC9B,CAAC;EAED,OACER,KAAA,CAACR,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GACzBd,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACG,QAAS;MAACC,OAAO,EAAEP,UAAW;MAAAK,QAAA,EAC5Dd,IAAA,CAACF,IAAI;QAACmB,IAAI,EAAEV,UAAU,GAAG,OAAO,GAAG,MAAO;QAACW,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE;IAAC,CACrD,CAAC,EACnBnB,IAAA,CAACL,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACQ,KAAM;MAAAN,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC1Cd,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACS,SAAU;MAACL,OAAO,EAAEP,UAAW;MAAAK,QAAA,EAC7Dd,IAAA,CAACF,IAAI;QAACmB,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE;IAAC,CAC7B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMP,MAAM,GAAGhB,UAAU,CAAC0B,MAAM,CAAC;EAC/BT,MAAM,EAAE;IACNU,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,eAAe;IAC/BC,MAAM,EAAE,EAAE;IACVC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,MAAM;IACzBC,eAAe,EAAE,SAAS;IAC1BC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE;EACV,CAAC;EACDhB,QAAQ,EAAE;IACRiB,UAAU,EAAE,CAAC,GAAG;IAChBC,SAAS,EAAE,CAAC;EACd,CAAC;EACDb,KAAK,EAAE;IACLc,IAAI,EAAE,CAAC;IACPC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,EAAE;IACZjB,KAAK,EAAE,OAAO;IACdkB,UAAU,EAAE;EACd,CAAC;EACDhB,SAAS,EAAE;IACTS,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAe3B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}