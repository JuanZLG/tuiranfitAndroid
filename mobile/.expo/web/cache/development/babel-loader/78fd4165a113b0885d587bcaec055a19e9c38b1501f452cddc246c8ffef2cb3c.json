{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var menuTranslateX = useRef(new Animated.Value(-300)).current;\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(function (prev) {\n      return !prev;\n    });\n  };\n  useEffect(function () {\n    Animated.timing(menuTranslateX, {\n      toValue: isMenuOpen ? 0 : -300,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  }, [isMenuOpen]);\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(TouchableOpacity, {\n      style: styles.menuIcon,\n      onPress: toggleMenu,\n      children: _jsx(Icon, {\n        name: \"bars\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsxs(Animated.View, {\n      style: [styles.sideMenu, {\n        transform: [{\n          translateX: menuTranslateX\n        }]\n      }],\n      children: [_jsx(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: toggleMenu,\n        children: _jsx(Text, {\n          style: styles.closeButtonText,\n          children: \"Cerrar\"\n        })\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 1\"\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 2\"\n      }), _jsx(Text, {\n        style: styles.menuItem,\n        children: \"Opci\\xF3n 3\"\n      })]\n    }), _jsx(View, {\n      style: styles.content\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menuIcon: {\n    marginLeft: 10,\n    zIndex: 2\n  },\n  sideMenu: {\n    backgroundColor: 'black',\n    padding: 16,\n    width: 300,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%'\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 20\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16\n  },\n  menuItem: {\n    color: 'white',\n    fontSize: 18,\n    marginBottom: 10\n  },\n  content: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","Image","TouchableOpacity","Animated","Icon","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","menuTranslateX","Value","current","toggleMenu","prev","timing","toValue","duration","useNativeDriver","start","style","styles","container","children","menuIcon","onPress","name","size","color","sideMenu","transform","translateX","closeButton","closeButtonText","menuItem","content","create","flex","flexDirection","marginLeft","zIndex","backgroundColor","padding","width","position","top","left","height","alignSelf","marginBottom","fontSize"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/navbarrr.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, Animated } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n\r\n  const menuTranslateX = useRef(new Animated.Value(-300)).current;\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Animated.timing(menuTranslateX, {\r\n      toValue: isMenuOpen ? 0 : -300,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [isMenuOpen]);\r\n\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <TouchableOpacity style={styles.menuIcon} onPress={toggleMenu}>\r\n        <Icon name=\"bars\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <Animated.View style={[styles.sideMenu, { transform: [{ translateX: menuTranslateX }] }]}>\r\n        <TouchableOpacity style={styles.closeButton} onPress={toggleMenu}>\r\n          <Text style={styles.closeButtonText}>Cerrar</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.menuItem}>Opción 1</Text>\r\n        <Text style={styles.menuItem}>Opción 2</Text>\r\n        <Text style={styles.menuItem}>Opción 3</Text>\r\n      </Animated.View>\r\n      <View style={styles.content}>\r\n        {/* Contenido principal de la aplicación */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menuIcon: {\r\n    marginLeft: 10,\r\n    zIndex: 2,\r\n  },\r\n  sideMenu: {\r\n    backgroundColor: 'black',\r\n    padding: 16,\r\n    width: 300,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n  },\r\n  closeButton: {\r\n    alignSelf: 'flex-end',\r\n    marginBottom: 20,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n  menuItem: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    backgroundColor: 'white', // Ajusta el fondo según tu aplicación\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}