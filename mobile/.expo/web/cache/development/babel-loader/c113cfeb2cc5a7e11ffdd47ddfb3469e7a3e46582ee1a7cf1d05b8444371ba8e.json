{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Sidebar = function Sidebar() {\n  var MenuItem = function MenuItem(_ref) {\n    var text = _ref.text,\n      onPress = _ref.onPress;\n    return _jsxs(TouchableOpacity, {\n      style: styles.menuItemContainer,\n      onPress: onPress,\n      children: [_jsx(Text, {\n        style: styles.menuItemText,\n        children: text\n      }), _jsx(Icon, {\n        name: \"angle-right\",\n        size: 20,\n        color: \"gray\",\n        style: styles.icon\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.sidebar,\n    children: [_jsx(MenuItem, {\n      text: \"Opci\\xF3n 1\",\n      onPress: function onPress() {\n        return console.log('Opción 1 presionada');\n      }\n    }), _jsx(MenuItem, {\n      text: \"Opci\\xF3n 2\",\n      onPress: function onPress() {\n        return console.log('Opción 2 presionada');\n      }\n    }), _jsx(MenuItem, {\n      text: \"Opci\\xF3n 3\",\n      onPress: function onPress() {\n        return console.log('Opción 3 presionada');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  sidebar: {\n    backgroundColor: 'black',\n    padding: 16,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: 150,\n    zIndex: 2,\n    justifyContent: 'center'\n  },\n  menuItemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  menuItemText: {\n    color: 'white',\n    fontSize: 16\n  },\n  icon: {\n    marginLeft: 3\n  }\n});\nexport default Sidebar;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Icon","jsx","_jsx","jsxs","_jsxs","Sidebar","MenuItem","_ref","text","onPress","style","styles","menuItemContainer","children","menuItemText","name","size","color","icon","sidebar","console","log","create","backgroundColor","padding","position","top","left","height","width","zIndex","justifyContent","flexDirection","alignItems","marginBottom","fontSize","marginLeft"],"sources":["C:/Users/LENOVO/Desktop/tuiranfitAndroid/mobile/views/sidebarrr.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Sidebar = () => {\r\n  const MenuItem = ({ text, onPress }) => (\r\n    <TouchableOpacity style={styles.menuItemContainer} onPress={onPress}>\r\n      <Text style={styles.menuItemText}>{text}</Text>\r\n      <Icon name=\"angle-right\" size={20} color=\"gray\" style={styles.icon} />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.sidebar}>\r\n      <MenuItem text=\"Opción 1\" onPress={() => console.log('Opción 1 presionada')} />\r\n      <MenuItem text=\"Opción 2\" onPress={() => console.log('Opción 2 presionada')} />\r\n      <MenuItem text=\"Opción 3\" onPress={() => console.log('Opción 3 presionada')} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  sidebar: {\r\n    backgroundColor: 'black',\r\n    padding: 16,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    width: 150,\r\n    zIndex: 2,\r\n    justifyContent: 'center', // Centra verticalmente las opciones en el Sidebar\r\n  },\r\n  menuItemContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8, // Espacio entre elementos reducido\r\n  },\r\n  menuItemText: {\r\n    color: 'white',\r\n    fontSize: 16, // Tamaño de texto ajustado\r\n  },\r\n  icon: {\r\n    marginLeft: 3, // Ajusta la posición del icono con un margen negativo\r\n  },\r\n});\r\n\r\nexport default Sidebar;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAOC,IAAI;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA;IAAA,IAAMC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAA,OAC/BL,KAAA,CAACL,gBAAgB;MAACW,KAAK,EAAEC,MAAM,CAACC,iBAAkB;MAACH,OAAO,EAAEA,OAAQ;MAAAI,QAAA,GAClEX,IAAA,CAACL,IAAI;QAACa,KAAK,EAAEC,MAAM,CAACG,YAAa;QAAAD,QAAA,EAAEL;MAAI,CAAO,CAAC,EAC/CN,IAAA,CAACF,IAAI;QAACe,IAAI,EAAC,aAAa;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC,MAAM;QAACP,KAAK,EAAEC,MAAM,CAACO;MAAK,CAAE,CAAC;IAAA,CACtD,CAAC;EAAA,CACpB;EAED,OACEd,KAAA,CAACR,IAAI;IAACc,KAAK,EAAEC,MAAM,CAACQ,OAAQ;IAAAN,QAAA,GAC1BX,IAAA,CAACI,QAAQ;MAACE,IAAI,EAAC,aAAU;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMW,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAAA;IAAC,CAAE,CAAC,EAC/EnB,IAAA,CAACI,QAAQ;MAACE,IAAI,EAAC,aAAU;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMW,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAAA;IAAC,CAAE,CAAC,EAC/EnB,IAAA,CAACI,QAAQ;MAACE,IAAI,EAAC,aAAU;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMW,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CAC3E,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGb,UAAU,CAACwB,MAAM,CAAC;EAC/BH,OAAO,EAAE;IACPI,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,CAAC;IACTC,cAAc,EAAE;EAClB,CAAC;EACDnB,iBAAiB,EAAE;IACjBoB,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDpB,YAAY,EAAE;IACZG,KAAK,EAAE,OAAO;IACdkB,QAAQ,EAAE;EACZ,CAAC;EACDjB,IAAI,EAAE;IACJkB,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe/B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}